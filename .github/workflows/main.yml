name: CI-CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ feature/Docker ]
  pull_request:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job runs only if the commit message says build app
  compile:
    runs-on: ubuntu-latest
    name: Running Java ${{ matrix.java }} compile    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Compile code
      run: mvn compile
  test:
    runs-on: ubuntu-latest
    name: Running tests
    needs: compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run unit tests
        run: mvn test

  build:
    runs-on: ubuntu-latest
    name: Run mvn build and generate coverage report
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true

  # Steps represent a sequence of tasks that will be executed as part of the job
  push_to_DockerHub:
      name: Push Images to DockerHub
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build Docker image and push to docker hub
      # only if the app build and test successfully
      if: "contains(github.event.commits[0].message, '[build app]')"
      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: akos99
            password: cba92140-2bca-4154-863a-42e8e5a805eb

        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./docker-compose.yml
            push: true
            tags: akos99/express-demo:latest

        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: akos99/express-demo:latest
            run: |
              echo "runing the docker image"
              echo "Testing the nodejs  app endpoints"
              echo ${{ steps.docker_build.outputs.digest }}
  deploy_to_Heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    # only run this after deploying to docker
    needs: [push_to_DockerHub]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      # more info on deploy to Heroku:
      # https://github.com/marketplace/actions/deploy-to-heroku
      - name: deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: 8579f7db-96fe-4d43-bd89-bd56d6750d87
          heroku_app_name: rising-of-the-devops2022
          heroku_email: akos99@protonmail.com
          # build the app docker image using the Dockerfile
          # and run that image in a container that's pushed to Heroku
          usedocker: true

